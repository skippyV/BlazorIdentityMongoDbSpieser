@page "/test"

@rendermode @(new InteractiveServerRenderMode(prerender: false))

@inject NavigationManager NavigationManager
@inject UserManager<ApplicationUser> _userManager;
@inject SignInManager<ApplicationUser> _signInManager;

<RadzenCard class="rz-my-12 rz-mx-auto rz-p-4 rz-p-md-12" style="max-width: 600px;">
    <RadzenTemplateForm Data=@("LoginWithDefaultValues")>
        <RadzenLogin AllowRegister="true" AllowResetPassword="true" Username=@userName Password=@password
        AllowRememberMe="true" RememberMe="@rememberMe"
        Login=@(args => OnLogin(args, "Login with default values"))
        ResetPassword=@(args => OnResetPassword(args, "Login with default values"))
        Register=@(args => OnRegister("Login with default values")) />
    </RadzenTemplateForm>
</RadzenCard>

<EventConsole @ref=@console />

@code {
    string userName = "admin";
    string password = "admin";
    bool rememberMe = true;

    EventConsole console = new EventConsole();

    void OnLogin(LoginArgs args, string name)
    {
        console.Log($"{name} -> Username: {args.Username}, password: {args.Password}, remember me: {args.RememberMe}");
        _signInManager.PasswordSignInAsync(args.Username, args.Password, args.RememberMe, lockoutOnFailure: false);
    }

    void OnRegister(string name)
    {
        console.Log($"{name} -> Register");
    }

    void OnResetPassword(string value, string name)
    {
        console.Log($"{name} -> ResetPassword for user: {value}");
    }
}

